apiVersion: v1
kind: Service
metadata:
  name: myapp-service
spec:
# “headless” services
  clusterIP: None
  selector:
    app: myapp
  ports:
  - port: 2551
    protocol: TCP
    targetPort: 2551
    name: akka-cluster
  - port: 8558
    protocol: TCP
    targetPort: 8558
    name: akka-management
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-deployment
spec:
  replicas: 3
  selector:
      matchLabels:
        app: myapp
  template:
      metadata:
        labels:
          app: myapp
      spec:
        containers:
        - name: myapp
          image: akka-k8s:0.1.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 2551
            name: akka-remote
            protocol: TCP
          - containerPort: 8558
            name: akka-mgmt-http
            protocol: TCP

---
#
# Create a role, `pod-reader`, that can list pods and
# bind the default service account in the `default` namespace
# to that role.
# Needed by Akka Management
#
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: read-pods
subjects:
# Note the `name` line below. The first default refers to the namespace. The second refers to the service account name.
# For instance, `name: system:serviceaccount:myns:default` would refer to the default service account in namespace `myns`
# Needed by Akka Management
- kind: User
  name: system:serviceaccount:default:default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
